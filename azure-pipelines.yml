trigger:
  branches:
    include:
      - master  # Trigger the pipeline on changes to the master branch

pool:
  vmImage: 'ubuntu-latest'  # Use an Ubuntu-based virtual machine for the build

steps:
  # Step 1: Set up Python environment
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.12.3'  # Specify the Python version to use (3.x for the latest)
      addToPath: true

  # Step 2: Install dependencies (Selenium, Pytest, and other required packages)
  - script: |
      python -m pip install --upgrade pip  # Upgrade pip
      pip install -r End_To_End_Testing/requirements.txt  # Install dependencies from requirements.txt
    displayName: 'Install dependencies'

  # Step 3: Install Google Chrome and ChromeDriver
  - script: |
      # Install Chrome
      wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
      sudo apt install -y ./google-chrome-stable_current_amd64.deb
      
      # Install ChromeDriver
      CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+')  # Get Chrome version
      DRIVER_VERSION=$(curl -sS https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION)  # Get matching ChromeDriver version
      wget https://chromedriver.storage.googleapis.com/$DRIVER_VERSION/chromedriver_linux64.zip
      unzip chromedriver_linux64.zip
      sudo mv chromedriver /usr/local/bin/  # Move the binary to a location in the PATH
      sudo chmod +x /usr/local/bin/chromedriver  # Make it executable
    displayName: 'Install Google Chrome and ChromeDriver'

  # Step 4: Run Pytest to execute the tests
  - script: |
      pytest End_To_End_Testing/test_TC_001.py  # Adjust to your test directory
    displayName: 'Run Pytest'
  
  # Optional Step: Publish test results (JUnit format)
  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'           # Use JUnit for Pytest results
      testResultsFiles: '**/junit*.xml'    # Path to test result files
      failTaskOnFailedTests: true
